@page "/register"

@using System.IO
@using System.Net.Mime

@inject UserRegisterViewModel userRegisterViewModel
@inject HttpClient httpClient
@inject ILocalStorageService localStorage
@inject ICrypto Crypto

<div class="d-flex flex-row flex-fill align-items-stretch">
    <div class="flex-fill d-flex flex-column d-flex align-items-stretch" style="background-color:#bdbdbd">
        <div class="container flex-fill" style="overflow:auto;height:auto;background-color:lightgray;">
            <br />
            <EditForm Model="userRegisterViewModel">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <h3>Register</h3>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <RadzenLabel Text="Email: "></RadzenLabel>
                            <RadzenTextBox @bind-Value="userRegisterViewModel.Email"></RadzenTextBox>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <RadzenLabel Text="Password: "></RadzenLabel>
                            <RadzenPassword @bind-Value="userRegisterViewModel.Password"></RadzenPassword>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <Radzen.Blazor.RadzenLabel Text="Gender: "></Radzen.Blazor.RadzenLabel>
                        <RadzenRadioButtonList @bind-Value="userRegisterViewModel.Gender" TValue="string">
                            <Items>
                                <RadzenRadioButtonListItem Text="männlich" Value="male"></RadzenRadioButtonListItem>
                                <RadzenRadioButtonListItem Text="weiblich" Value="female"></RadzenRadioButtonListItem>
                                <RadzenRadioButtonListItem Text="divers" Value="divers"></RadzenRadioButtonListItem>
                            </Items>
                        </RadzenRadioButtonList>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <RadzenLabel Text="Country: "></RadzenLabel>
                            <RadzenTextBox Style="margin-left:8px;" @bind-Value="userRegisterViewModel.Country"></RadzenTextBox>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <RadzenLabel Text="Firstname: "></RadzenLabel>
                            <RadzenTextBox @bind-Value="userRegisterViewModel.FirstName"></RadzenTextBox>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <RadzenLabel Text="Lastname: "></RadzenLabel>
                            <RadzenTextBox @bind-Value="userRegisterViewModel.LastName"></RadzenTextBox>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <RadzenLabel Text="Calendar: "></RadzenLabel>
                        <Radzen.Blazor.RadzenDatePicker @bind-Value="@Date" DateFormat="d" Change=@(args => OnChangeCalendar(args,"DatePicker","MM/dd/yyyy"))>
                        </Radzen.Blazor.RadzenDatePicker>
                    </div>
                    <div class="col-md-6">
                        <RadzenLabel Text="Street: "></RadzenLabel>
                        <RadzenTextBox @bind-Value="userRegisterViewModel.Street"></RadzenTextBox>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <RadzenLabel Text="State: "></RadzenLabel>
                        <RadzenTextBox @bind-Value="userRegisterViewModel.State"></RadzenTextBox>
                    </div>
                </div>
                <br />
                <button @onclick="() => OnGet()">Register User</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    const string male = "männlich";
    const string female = "weiblich";
    const string divers = "divers";

    public DateTime Date = DateTime.Now;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task OnGet()
    {
        Client client = await localStorage.GetItemAsync<Client>("client");
        await userRegisterViewModel.Register(client);
        //HttpClient client = new HttpClient();
        //client.BaseAddress = new Uri("http://localhost:8080");
        //await client.GetAsync("/User");
    }

    private async Task OnRegister()
    {
        //Generate
        //Post-Request to create a User
        //await client.RegisterCustomer(userRegisterViewModel.GetUser());
    }

    private void OnChangeCalendar(DateTime? date, string name, string format)
    {
        userRegisterViewModel.Birthday = date?.ToString(format);
    }

}